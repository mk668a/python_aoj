問1　サボり部下とボス

あなたの nn 人の部下が、一列に並んでいます。左から ii 番目の部下が、部下 ii です。部下の中にはサボっている人がいるので、最大 kk 回の声がけをすることで、なるべく多く部下がサボっていない状態にしたいです。部下 ii に声がけをすると、部下 ii と、両隣の部下がサボらないようになります。

ザ・ミッション
サボっている部下の位置が与えられるので、最大 kk 回の声がけによって、最大何人の人がサボっていない状態にできるでしょうか？

実装の詳細
CLI
入力値が書かれたファイル名を引数に取り、結果を標準出力に表示するCLIアプリケーションを実装してください。
詳細は末尾の「CLI アプリ作成用テンプレート」を参照ください。

入力ルール
以下のようにプログラムが実行されます。

 ./myapp < input.in
input.inのフォーマットは以下です。

n k
s
制約は以下です。

1 \le n \le 10001≤n≤1000, 整数
1 \le k \le 10001≤k≤1000, 整数
文字列 ss は、Sか.で構成される nn 文字の文字列
文字列 ss の左から ii 番目が（1 \le i \le n1≤i≤n）
Sである場合、部下 ii はサボっていることを表す
.である場合、部下 ii はサボっていないことを表す
出力ルール
以下のフォーマットを満たす標準出力を出力してください。

max
11 行目に、声がけが終わった時の、サボっていない人数の最大値を出力してください。
入出力例
例 1
$ ./myapp < 00_sample1.in
00_sample1.in

5 3
.....
標準出力

5
33 回の声がけをすることができますが、11 回の声がけをする必要もなく、55 人の部下全員がサボっていません。

例 2
$ ./myapp < 00_sample2.in
00_sample2.in

5 1
SS..S
標準出力

4
部下 22 に声がけをすると、部下 22 とその両隣（部下 11, 部下 33 ）がサボらなくなります。その結果、....Sの状態となります。
他にも、部下 11 に声がけをすることでも最大値を達成できます。部下 11 に声がけをすると、部下 11 とその両隣（部下 22 ）がサボらなくなります。その結果、同様に....Sの状態となります。

例 3
$ ./myapp < 00_sample3.in
00_sample3.in

12 2
.SSSS.SS.SSS
標準出力

9
例えば部下 33, 部下 1111 に声がけをすることで、 ....S.SS....の状態にできます。これがサボっていない人数が最大化された状態です。

例 4
$ ./myapp < 00_sample4.in
00_sample4.in

6 2
S.SSSS
標準出力

6
部下 22 と部下 55 に声がけをして、全員サボっていない状態にできるので答えは 66 です。

なお、期待する入出力は test/basic_testcases.json にいくつか定義されています。
実装する際の参考にしてください。

コマンドラインアプリケーション(CLI アプリ)作成用テンプレート(Python3.x)
main.pyを編集して、CLIアプリを実装してください。
チャレンジ内でファイルの作成が許可されていれば、可読性等のためにファイルを分割する事も可能です。

標準入力の取得方法
main.py内で定義されている、mainという関数から、 lines の名前で取得可能です。

def main(lines):
    # code to run
ここでの lines は sys.stdin の内容が入ります。

コマンド実行結果の標準出力への出力
stdoutへの出力は標準のprintメソッドが使用可能です。

print(result)
外部ライブラリの追加方法
外部ライブラリを使用する場合は以下の手順で実施してください。

requirements.txtにライブラリ名とバージョンを記述
例:
numpy==1.11.0
requests==2.12.4




1. [基本実装] 全員がサボっていない時に正答できる
2. [基本実装] サボっている人が分離している時に正答できる
3. [基本実装] 声掛けが2回できて、全員がサボらない状態にできない場合に正答できる
4. [基本実装] 声掛けが2回できて、全員がサボらない状態にできる場合に正答できる
5. [基本実装] 部下が9人いて、1回声掛けができる時に正答できる
6. [基本実装] 部下が5人いて、1回声掛けができる時に正答できる
7. [基本実装] 部下が7人いて、1回声掛けができる時に正答できる
8. [基本実装] 部下が10人いて、1回声掛けができる時に正答できる
9. [大規模なデータ入力を扱う実装] 部下が67人いて、4回声掛けができる時に正答できる
10. [大規模なデータ入力を扱う実装] 部下が29人いて、2回声掛けができる時に正答できる
11. [大規模なデータ入力を扱う実装] 部下が79人いて、6回声掛けができる時に正答できる
12. [大規模なデータ入力を扱う実装] 部下が41人いて、9回声掛けができる時に正答できる
13. [大規模なデータ入力を扱う実装] 部下が295人いて、86回声掛けができる時に正答できる
14. [大規模なデータ入力を扱う実装] 部下が743人いて、69回声掛けができる時に正答できる
15. [大規模なデータ入力を扱う実装] 部下が91人いて、67回声掛けができる時に正答できる
16. [大規模なデータ入力を扱う実装] 部下が458人いて、83回声掛けができる時に正答できる
17. [大規模なデータ入力を扱う実装] 部下が713人いて、69回声掛けができる時に正答できる
18. [大規模なデータ入力を扱う実装] 部下が589人いて、51回声掛けができる時に正答できる
19. [大規模なデータ入力を扱う実装] 部下が474人いて、73回声掛けができる時に正答できる
20. [大規模なデータ入力を扱う実装] 部下が491人いて、50回声掛けができる時に正答できる
21. [大規模なデータ入力を扱う実装] 部下が7人いて、97回声掛けができる時に正答できる
22. [大規模なデータ入力を扱う実装] 部下が401人いて、72回声掛けができる時に正答できる
23. [大規模なデータ入力を扱う実装] 部下が480人いて、75回声掛けができる時に正答できる
24. [大規模なデータ入力を扱う実装] 部下が276人いて、23回声掛けができる時に正答できる

not ok 12 [大規模なデータ入力を扱う実装] 部下が41人いて、9回声掛けができる時に正答できる

  AssertionError: 1番目のデータが違います。

  期待された答え: 41

  あなたの答え: 40

  #### 入力:

  41 9

  .S.S...S.S.....S.SS.SS.SS.SS.S.SS.SS.....

  #### あなたの答え:

  40

  #### 期待された答え:

  41


not ok 16 [大規模なデータ入力を扱う実装] 部下が458人いて、83回声掛けができる時に正答できる

  AssertionError: 1番目のデータが違います。

  期待された答え: 431

  あなたの答え: 427

  #### 入力:

  458 83

  ..SSSSSS.SSS...SS.S.S..S...S.S..S.....SS.S.S..SSSSSS.SSSS..S.....S.....S.S...S...S....S...S....S.S.SSS....SSS....SSSS.S.........SSSS.S...SS..SS....S.SS..SS.SS.S..SS..SS..SS..SS..S.SS.SSSSSS.S.S....S..S...SS....SS........SS.S....S.S..S.SSSS.S..SSSSSSS.S..S....S.S.SS.SS.SSS.S.....S...S....S..SS...

  #### あなたの答え:

  427

  #### 期待された答え:

  431

  